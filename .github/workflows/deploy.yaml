name: Consent API Deployment

on:
  push:
    branches: ['main']

env:
  REGISTRY: gcr.io
  PROJECT_ID: sde-consent-api
  SERVICE_ID: consent-api
  IMAGE_NAME: gcr.io/sde-consent-api/consent-api
  REGION: europe-west2

jobs:

  docker-image:
    name: Build and push Docker image
    runs-on: ubuntu-latest

    permissions:
      contents: write
      id-token: write
      packages: write

    steps:
    - uses: actions/checkout@v3

    - name: Bump version and push tag
      id: release
      uses: rymndhng/release-on-push-action@master
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        bump_version_scheme: patch
        use_github_release_notes: true

    - name: Authenticate to Google Cloud
      id: auth
      if: steps.release.outputs.tag_name != ''
      uses: google-github-actions/auth@v1
      with:
        token_format: access_token
        workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
        service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

    - name: Login to Google Container Registry
      id: docker-auth
      if: steps.release.outputs.tag_name != ''
      uses: docker/login-action@v2
      with:
        registry: gcr.io
        username: oauth2accesstoken
        password: '${{ steps.auth.outputs.access_token }}'

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      if: steps.release.outputs.tag_name != ''
      with:
        push: true
        tags: |
          ${{ env.IMAGE_NAME }}:latest
          ${{ env.IMAGE_NAME }}:${{ steps.release.outputs.tag_name }}

    - name: Deploy to Cloud Run
      id: deploy
      if: steps.release.outputs.tag_name != ''
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: ${{ env.SERVICE_ID }}
        region: ${{ env.REGION }}
        image: ${{ env.IMAGE_NAME }}:${{ steps.release.outputs.tag_name }}

    - uses: actions/setup-node@v3
      if: steps.release.outputs.tag_name != ''
      with:
        node-version-file: package.json
        registry-url: https://npm.pkg.github.com

    - name: Publish JS package
      if: steps.release.outputs.tag_name != ''
      run: |
        yarn publish --new-version ${{ steps.release.outputs.version }}
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
