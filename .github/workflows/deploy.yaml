name: Deploy to Google Cloud Run

on:
  workflow_call:
    inputs:
      image_name:
        description: "Docker image name"
        required: true
        type: string
      tag:
        description: "The docker image tag (default 'latest')"
        required: false
        type: string
        default: "latest"
      is_branch:
        description: "Deploying a unmerged branch"
        required: false
        type: boolean
      environment:
        description: "The Github environment to deploy with"
        required: false
        type: string
        default: "staging"
      noop:
        description: "Do not actually perform the deployment"
        required: false
        type: boolean
    secrets:
      WIF_PROVIDER:
        description: "Google Cloud Workload Identity Federation provider ID"
        required: true
      WIF_SERVICE_ACCOUNT:
        description: "Google Cloud Workload Identity Federation service account email"
        required: true

    outputs:
      url:
        description: "URL of deployed service"
        value: ${{ jobs.deploy.outputs.url }}

jobs:
  deploy:
    name: Deploy to Google Cloud Run
    runs-on: ubuntu-latest

    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.deploy.outputs.url }}

    permissions:
      contents: write
      id-token: write

    outputs:
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.tag }}

      - uses: google-github-actions/auth@v1
        id: auth
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account: ${{ secrets.WIF_SERVICE_ACCOUNT }}

      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - uses: docker/build-push-action@v3
        with:
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ inputs.image_name }}:latest
            ${{ inputs.image_name }}:${{ inputs.tag }}

      - uses: actions/setup-python@v4
        with:
          python-version-file: ".python-version"
          cache: "pip"

      - uses: pulumi/actions@v4

      - run: |
          python infra/deploy-service.py --env ${ENV} ${BRANCH} ${TAG} ${PREVIEW}
        env:
          ENV: ${{ inputs.environment }}
          BRANCH: ${{ inputs.is_branch && format('--branch {0}', inputs.tag) || '' }}
          TAG: ${{ format('--tag {0}', inputs.tag) }}
          PREVIEW: ${{ inputs.noop && '--preview' || '' }}
