name: Deploy to Google Cloud Run

on:
  workflow_call:
    inputs:
      image_name:
        description: "Docker image name"
        required: true
        type: string
      tag:
        description: "The docker image tag (default 'latest')"
        required: false
        type: string
        default: "latest"
      is_branch:
        description: "Deploying a unmerged branch"
        required: false
        type: boolean
      environment:
        description: "The Github environment to deploy with"
        required: false
        type: string
        default: "staging"
      noop:
        description: "Do not actually perform the deployment"
        required: false
        type: boolean
    secrets:
      PULUMI_ACCESS_TOKEN:
        description: "Pulumi Access Token"
        required: true

    outputs:
      url:
        description: "URL of deployed service"
        value: ${{ jobs.deploy.outputs.url }}

jobs:
  deploy:
    name: Deploy to Google Cloud Run
    runs-on: ubuntu-latest

    environment:
      name: ${{ inputs.environment }}
      url: ${{ steps.deploy.outputs.url }}

    permissions:
      contents: write
      id-token: write

    outputs:
      url: ${{ steps.deploy.outputs.url }}

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.tag }}

      - uses: pulumi/actions@v4

      - id: stack
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
        run: |
          outputs=$(pulumi stack output -j -s ${{ inputs.environment }})
          echo WIF_SERVICE_ACCOUNT=$(echo $outputs | jq -r '.service_account') >> "$GITHUB_OUTPUT"
          echo WIF_PROVIDER=$(echo $outputs | jq -r '.workload_identity_provider') >> "$GITHUB_OUTPUT"

      - uses: google-github-actions/auth@v1
        id: auth
        with:
          token_format: access_token
          workload_identity_provider: ${{ steps.stack.outputs.WIF_PROVIDER }}
          service_account: ${{ steps.stack.outputs.WIF_SERVICE_ACCOUNT }}

      - uses: google-github-actions/setup-gcloud@v1
        with:
          version: '>= 363.0.0'

      - uses: docker/setup-buildx-action@v2

      - uses: docker/login-action@v2
        with:
          registry: gcr.io
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - uses: docker/build-push-action@v3
        with:
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ inputs.image_name }}:latest
            ${{ inputs.image_name }}:${{ inputs.tag }}

      - name: Install poetry
        run: pipx install poetry

      - uses: actions/setup-python@v4
        with:
          python-version-file: ".python-version"
          cache: "poetry"
      - run: poetry install --only infra

      - run: |
          python infra/deploy_service.py --env ${ENV} ${BRANCH} ${TAG} ${PREVIEW}
        env:
          ENV: ${{ inputs.environment }}
          BRANCH: ${{ inputs.is_branch && format('--branch {0}', inputs.tag) || '' }}
          TAG: ${{ !inputs.is_branch && format('--tag {0}', inputs.tag) || '' }}
          PREVIEW: ${{ inputs.noop && '--preview' || '' }}
