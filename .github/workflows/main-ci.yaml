name: Consent API CI

on:
  push:
    branches: [ $default-branch ]
    tags:
      - '*'
  pull_request:
    branches: [ $default-branch ]

permissions:
  contents: read

jobs:

  lint:
    name: Lint and static checks
    runs-on: ubuntu-latest

    env:
      ENV: ci

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version-file: '.python-version'
        cache: pip

    - name: Install dependencies
      run: |
        make deps

    - name: Run linter
      run: |
        make lint

  test:
    name: Run tests
    runs-on: ubuntu-latest

    env:
      ENV: ci

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version-file: '.python-version'
        cache: pip

    - name: Install dependencies
      run: |
        make deps

    - name: Run tests
      run: |
        make test-coverage

    - name: Report code coverage
      uses: codecov/codecov-action@v3

  docker-image:
    name: Build and push Docker image
    runs-on: ubuntu-latest
    if: ${{ github.ref_type }} == 'tag'

    permissions:
      contents: 'read'
      id-token: 'write'

    env:
      PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}
      SERVICE: ${{ secrets.GOOGLE_CLOUD_SERVICE_ID }}
      DOCKER_REGISTRY: gcr.io
      DOCKER_IMAGE_NAME: gcr.io/${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}/${{ secrets.GOOGLE_CLOUD_SERVICE_ID }}

    steps:
    - uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      id: auth
      uses: 'google-github-actions/auth@v1'
      with:
        token_format: access_token
        workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
        service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

    - name: Docker auth
      id: docker-auth
      uses: 'docker/login-action@v2'
      with:
        registry: '${{ env.DOCKER_REPOSITORY }}'
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'

    - name: Build and push Docker image
      run: |
        docker build -t "${{ env.DOCKER_IMAGE_NAME }}:${{ github.ref_name }}" .
        docker push "${{ env.DOCKER_IMAGE_NAME }}:${{ github.ref_name }}"

    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0
      with:
        service: ${{ env.SERVICE }}
        region: ${{ env.REGION }}
        image: '${{ env.DOCKER_IMAGE_NAME }}:${{ github.ref_name }}'

    - name: Show URL
      run: |
        echo ${{ steps.deploy.outputs.url }}
