networks:
  e2e:
    name: e2e
    ipam:
      config:
        - subnet: 172.28.0.0/16
          gateway: 172.28.5.254

services:
  db:
    container_name: db
    networks:
      - e2e
    image: postgres:14
    healthcheck:
      test: pg_isready -U postgres
      interval: 2s
      timeout: 2s
      retries: 10
    ports:
      - "5433:5432"
    environment:
      POSTGRES_PASSWORD: postgres

  consent-api:
    container_name: consent-api
    networks:
      - e2e
    image: "${DOCKER_IMAGE}"
    ports:
      - "8000:80"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - "./client:/home/app/client"
      - "./consent_api:/home/app/consent_api"
    environment:
      DATABASE_URL: postgresql+asyncpg://postgres:postgres@db:5432/postgres
      PORT: "80"
      ENV: "${ENV}"
      FLAG_FIXTURES: "True"

  dummy-service-1:
    container_name: dummy-service-1
    profiles:
      - "test"
      - "test-ui"
      - "debug"
      - "codegen"
    networks:
      - e2e
    image: "${DOCKER_IMAGE}"
    volumes:
      - "./client:/home/app/client"
      - "./Makefile:/home/app/Makefile"
      - "./consent_api:/home/app/consent_api"
    entrypoint: ["make", "run"]
    environment:
      CONSENT_API_ORIGIN: "http://consent-api"
      OTHER_SERVICE_ORIGIN: "http://dummy-service-2"
      PORT: "80"
      ENV: ${ENV}

  dummy-service-1-local:
    container_name: dummy-service-1-local
    profiles:
      - "local"
    networks:
      - e2e
    image: "${DOCKER_IMAGE}"
    ports:
      - "8001:80"
    volumes:
      - "./client:/home/app/client"
      - "./Makefile:/home/app/Makefile"
      - "./consent_api:/home/app/consent_api"
    entrypoint: ["make", "run"]
    environment:
      CONSENT_API_ORIGIN: "http://localhost:8000"
      OTHER_SERVICE_ORIGIN: "http://localhost:8002"
      PORT: "80"
      ENV: ${ENV}


  dummy-service-2:
    container_name: dummy-service-2
    profiles:
      - "test"
      - "test-ui"
      - "debug"
      - "codegen"
    networks:
      - e2e
    image: "${DOCKER_IMAGE}"
    volumes:
      - "./client:/home/app/client"
      - "./Makefile:/home/app/Makefile"
      - "./consent_api:/home/app/consent_api"
    entrypoint: ["make", "run"]
    environment:
      CONSENT_API_ORIGIN: "http://consent-api"
      OTHER_SERVICE_ORIGIN: "http://dummy-service-1"
      PORT: "80"
      ENV: ${ENV}

  dummy-service-2-local:
    container_name: dummy-service-2-local
    profiles:
      - "local"
    networks:
      - e2e
    image: "${DOCKER_IMAGE}"
    ports:
      - "8002:80"
    volumes:
      - "./client:/home/app/client"
      - "./Makefile:/home/app/Makefile"
      - "./consent_api:/home/app/consent_api"
    entrypoint: ["make", "run"]
    environment:
      CONSENT_API_ORIGIN: "http://localhost:8000"
      OTHER_SERVICE_ORIGIN: "http://localhost:8001"
      PORT: "80"
      ENV: ${ENV}


  # express-app:
  #   container_name: express-app
  #   networks:
  #     - e2e
  #   build:
  #     context: ./express-app
  #     dockerfile: .Dockerfile
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - "./express-app:/usr/src/app"


  playwright: &playwright
    profiles:
      - "test"
    container_name: playwright
    networks:
      - e2e
    build:
      context: ./e2e-tests
      dockerfile: .Dockerfile
    volumes:
      - "./e2e-tests:/app"
      - "/tmp/.X11-unix:/tmp/.X11-unix"
    entrypoint: ["npx", "playwright", "test", "--retries=5", "--project=chromium"]
    environment:
      DISPLAY: host.docker.internal:0
      DUMMY_SERVICE_1_ORIGIN: "http://dummy-service-1"
      DUMMY_SERVICE_2_ORIGIN: "http://dummy-service-2"
    depends_on:
      - consent-api
      - dummy-service-1
      - dummy-service-2


  playwright-ui:
    <<: *playwright
    profiles:
      - "test-ui"
    container_name: playwright-ui
    entrypoint: ["npx", "playwright", "test", "--ui"]


  playwright-debug:
    <<: *playwright
    profiles:
      - "debug"
    container_name: playwright-debug
    entrypoint: ["npx", "playwright", "test", "--debug"]


  playwright-codegen:
    <<: *playwright
    profiles:
      - "codegen"
    container_name: playwright-codegen
    entrypoint: ["npx", "playwright", "codegen"]
